name: 'Release: Deploy PR'

on:
  pull_request:
    branches: [ 'releases/v*' ]
    types: [ closed ]

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_PACKAGE: site-composite

  HAB_LICENSE: accept-no-persist

jobs:
  release-deploy:

    if: github.event.pull_request.merged == true # only run on PR merge
    runs-on: ubuntu-latest
    steps:

    - name: Configure release
      run: |
        PR_TITLE=$(jq -r ".pull_request.title" $GITHUB_EVENT_PATH)
        PR_BODY=$(jq -r ".pull_request.body" $GITHUB_EVENT_PATH)
        RELEASE_TAG=$(echo "${PR_TITLE}" | grep -oP "(?<=^Release: )v\d+\.\d+\.\d+(-rc\.\d+)?$")

        if [[ "${RELEASE_TAG}" =~ -rc\.[0-9]+$ ]]; then
          RELEASE_PRERELEASE=true
        else
          RELEASE_PRERELEASE=false
        fi

        echo "PR_TITLE=${PR_TITLE}" >> $GITHUB_ENV
        echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV
        echo "RELEASE_PRERELEASE=${RELEASE_PRERELEASE}" >> $GITHUB_ENV

        echo 'PR_BODY<<END_OF_PR_BODY' >> $GITHUB_ENV
        echo "${PR_BODY}" >> $GITHUB_ENV
        echo 'END_OF_PR_BODY' >> $GITHUB_ENV

        DOCKER_REPOSITORY="${GITHUB_REPOSITORY,,}"
        echo "Using DOCKER_REPOSITORY=${DOCKER_REPOSITORY}"
        echo "DOCKER_REPOSITORY=${DOCKER_REPOSITORY}" >> $GITHUB_ENV

        DOCKER_TAG="${RELEASE_TAG:1}"
        echo "Using DOCKER_TAG=${DOCKER_TAG}"
        echo "DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV

    - name: 'Initialize Chef Habitat environment'
      uses: JarvusInnovations/habitat-action@action/v1
      with:
        deps: |
          jarvus/hologit

    - uses: actions/checkout@v2

    - id: site-projection
      name: 'Project holobranch: emergence-site'
      uses: JarvusInnovations/hologit@actions/projector/v1
      with:
        # use HEAD checked out above by checkout action
        ref: HEAD
        fetch: false
        holobranch: emergence-site

    - name: Build & push Docker image
      uses: whoan/docker-build-with-cache-action@v5
      with:
        dockerfile: Dockerfile
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ${{ env.DOCKER_REGISTRY }}
        image_name: ${{ env.DOCKER_REPOSITORY }}/${{ env.DOCKER_PACKAGE }}
        image_tag: ${{ env.DOCKER_TAG }}
        build_extra_args: |
          --build-arg=SITE_TREE=${{ steps.site-projection.outputs.tree }}
          --build-arg=SITE_VERSION=${{ env.RELEASE_TAG }}
          --build-arg=SOURCE_COMMIT=${{ github.sha }}
          --build-arg=SOURCE_TAG=${{ env.RELEASE_TAG }}
          --build-arg=HAB_LICENSE=${{ env.HAB_LICENSE }}

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.BOT_GITHUB_TOKEN }}
        commit: '${{ github.sha }}'
        tag: '${{ env.RELEASE_TAG }}'
        body: '${{ env.PR_BODY }}'
        draft: false
        prerelease: ${{ env.RELEASE_PRERELEASE }}
